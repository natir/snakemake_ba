{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Snakemake benchmark analysis is a set of tools to analyze snakemake benchmark. Snakemake benchmark information is split in many file and it's not easy to get all information and perform analysis efficently. Parser module contains function to collect snakemake benchmark data. Plot module contains function generate altair plot","title":"Home"},{"location":"#introduction","text":"Snakemake benchmark analysis is a set of tools to analyze snakemake benchmark. Snakemake benchmark information is split in many file and it's not easy to get all information and perform analysis efficently. Parser module contains function to collect snakemake benchmark data. Plot module contains function generate altair plot","title":"Introduction"},{"location":"parser/","text":"Found and parse snakemake benchmark file __recurse_scan ( target ) Recursive generator of all file child of target parameter Parameters: Name Type Description Default target pathlib.Path origin of file scan required Yields: Type Description path path to file child of target __wildcard_to_regex ( snakemake_bench_pattern ) Analyse a snakemake benchmark string to generate usefull stuff Parameters: Name Type Description Default snakemake_bench_pattern str argument string of snakemake benchmark section required Returns: Type Description tuple A tuple with, pathlib.Path.match pattern string, re.Pattern to extract wildcards information of benchmark path, list of wildcards name path_generator ( target , patern ) Generate all file match patern in target and subdirectory Parameters: Name Type Description Default target pathlib.Path origin of file scan required patern str filename must match this partern (see pathlib.Path.match) required Yields: Type Description path path to file child of target and match pattern stats_generator ( file_path ) Read a benchmark snakemake file and generate a dict contains statistics h:m:s column are ignored Parameters: Name Type Description Default file_path pathlib.Path path of snakemake benchmark file required Yields: Type Description stats each key of snakemake benchmark is associate with value stats_of_rules ( working_dir , snakemake_bench_patern ) Aggregate statistic about a snakemake rules in a pandas.DataFrame Parameters: Name Type Description Default working_dir pathlib.Path working directory where the studied snakemake was executed required snakemake_bench_patern str string set in benchmark section required Returns: Type Description data a DataFrame with benchmark data and wildcard values","title":"Parser"},{"location":"parser/#snakemake_ba.parser.__recurse_scan","text":"Recursive generator of all file child of target parameter Parameters: Name Type Description Default target pathlib.Path origin of file scan required Yields: Type Description path path to file child of target","title":"__recurse_scan()"},{"location":"parser/#snakemake_ba.parser.__wildcard_to_regex","text":"Analyse a snakemake benchmark string to generate usefull stuff Parameters: Name Type Description Default snakemake_bench_pattern str argument string of snakemake benchmark section required Returns: Type Description tuple A tuple with, pathlib.Path.match pattern string, re.Pattern to extract wildcards information of benchmark path, list of wildcards name","title":"__wildcard_to_regex()"},{"location":"parser/#snakemake_ba.parser.path_generator","text":"Generate all file match patern in target and subdirectory Parameters: Name Type Description Default target pathlib.Path origin of file scan required patern str filename must match this partern (see pathlib.Path.match) required Yields: Type Description path path to file child of target and match pattern","title":"path_generator()"},{"location":"parser/#snakemake_ba.parser.stats_generator","text":"Read a benchmark snakemake file and generate a dict contains statistics h:m:s column are ignored Parameters: Name Type Description Default file_path pathlib.Path path of snakemake benchmark file required Yields: Type Description stats each key of snakemake benchmark is associate with value","title":"stats_generator()"},{"location":"parser/#snakemake_ba.parser.stats_of_rules","text":"Aggregate statistic about a snakemake rules in a pandas.DataFrame Parameters: Name Type Description Default working_dir pathlib.Path working directory where the studied snakemake was executed required snakemake_bench_patern str string set in benchmark section required Returns: Type Description data a DataFrame with benchmark data and wildcard values","title":"stats_of_rules()"},{"location":"plot/","text":"Use snakemake benchmark data and plot them dynamic_scatter_plot ( df , x , y , group = None ) Generate an altair dynamic scatter plot Parameters: Name Type Description Default x str data show on x axis required y str data show on y axis required group str dataframe column use to group data (optional) None Returns: Type Description chart (altair.Chart) scatter plot","title":"Plot"},{"location":"plot/#snakemake_ba.plot.dynamic_scatter_plot","text":"Generate an altair dynamic scatter plot Parameters: Name Type Description Default x str data show on x axis required y str data show on y axis required group str dataframe column use to group data (optional) None Returns: Type Description chart (altair.Chart) scatter plot","title":"dynamic_scatter_plot()"}]}